version: '3.8'

services:
  # MySQL Database Service
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: megatrip
      MYSQL_USER: ${MYSQL_USER:-megatrip_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - megatrip-network

  # FastAPI Service (Internal only - not exposed externally)
  api:
    image: ${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${DOCKER_REPOSITORY}:latest 
    platform: linux/amd64
    restart: always
    environment:
      # MySQL Configuration
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: megatrip
      MYSQL_USER: ${MYSQL_USER:-megatrip_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    # No external port mapping - only accessible within Docker network
    expose:
      - "8000"
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    depends_on:
      - db
    networks:
      - megatrip-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application Service with Streamlit (Public facing)
  web:
    image: ${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${DOCKER_REPOSITORY}:latest 
    platform: linux/amd64
    restart: always
    environment:
      # MySQL Configuration (for backward compatibility)
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: megatrip
      MYSQL_USER: ${MYSQL_USER:-megatrip_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # API Configuration - internal Docker network communication
      API_URL: http://api:8000
    ports:
      - "${PORT:-8501}:8501"  # Only Streamlit is exposed externally
    command: ["streamlit", "run", "main.py", "--server.port=8501", "--server.address=0.0.0.0"]
    volumes:
      - ./logs:/var/log/nginx  # For Nginx logs
      - ./static:/app/static  # For serving static files
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - api
    networks:
      - megatrip-network

volumes:
  mysql_data:

networks:
  megatrip-network:
    driver: bridge